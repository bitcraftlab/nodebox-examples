{
    "title": "custom-example-01",
    "color": "#f60",
    "dependencies": {
        "core/g": "dev"
    },
    "assets": {},
    "functions": [
        {
            "name": "main",
            "type": "network",
            "renderedNode": "combine1",
            "nodes": [
                {
                    "name": "number1",
                    "x": 75,
                    "y": 105,
                    "fn": "g.number",
                    "values": {
                        "v": 64
                    }
                },
                {
                    "name": "number2",
                    "x": 235,
                    "y": 105,
                    "fn": "g.number",
                    "values": {
                        "v": 0
                    }
                },
                {
                    "name": "number3",
                    "x": 385,
                    "y": 105,
                    "fn": "g.number",
                    "values": {
                        "v": 6
                    }
                },
                {
                    "name": "randomNumbers1",
                    "x": 165,
                    "y": 245,
                    "fn": "g.randomNumbers",
                    "values": {
                        "min": -250,
                        "max": 250
                    }
                },
                {
                    "name": "randomNumbers2",
                    "x": 295,
                    "y": 245,
                    "fn": "g.randomNumbers",
                    "values": {
                        "min": -250,
                        "max": 250
                    }
                },
                {
                    "name": "productPoint1",
                    "x": 235,
                    "y": 355,
                    "fn": "customExample01.productPoint"
                },
                {
                    "name": "ellipse1",
                    "x": 125,
                    "y": 505,
                    "fn": "g.ellipse",
                    "values": {
                        "width": 20,
                        "height": 20
                    }
                },
                {
                    "name": "ellipse2",
                    "x": 295,
                    "y": 505,
                    "fn": "g.ellipse",
                    "values": {
                        "width": 10,
                        "height": 10
                    }
                },
                {
                    "name": "colorize2",
                    "x": 295,
                    "y": 575,
                    "fn": "g.colorize",
                    "values": {
                        "fill": "rgba(255, 255, 255, 1)"
                    }
                },
                {
                    "name": "combine1",
                    "x": 125,
                    "y": 705,
                    "fn": "g.combine"
                }
            ],
            "connections": [
                {
                    "output": "number1",
                    "input": "randomNumbers1",
                    "parameter": "amount"
                },
                {
                    "output": "number2",
                    "input": "randomNumbers1",
                    "parameter": "seed"
                },
                {
                    "output": "number1",
                    "input": "randomNumbers2",
                    "parameter": "amount"
                },
                {
                    "output": "number3",
                    "input": "randomNumbers2",
                    "parameter": "seed"
                },
                {
                    "output": "randomNumbers1",
                    "input": "productPoint1",
                    "parameter": "list1"
                },
                {
                    "output": "randomNumbers2",
                    "input": "productPoint1",
                    "parameter": "list2"
                },
                {
                    "output": "productPoint1",
                    "input": "ellipse1",
                    "parameter": "position"
                },
                {
                    "output": "productPoint1",
                    "input": "ellipse2",
                    "parameter": "position"
                },
                {
                    "output": "ellipse2",
                    "input": "colorize2",
                    "parameter": "shape"
                },
                {
                    "output": "ellipse1",
                    "input": "combine1",
                    "parameter": "list1"
                },
                {
                    "output": "colorize2",
                    "input": "combine1",
                    "parameter": "list2"
                }
            ],
            "parameters": [],
            "returnsList": true
        },
        {
            "name": "product",
            "type": "code",
            "outputType": "float",
            "parameters": [],
            "source": "\n// cartesian product\n\ncustomExample01.product = function()  {\n\n    var args = [].slice.call(arguments);\n    var end = args.length - 1;\n\n    var result = [];\n\n    function addTo(curr, start) {\n\n        var first = args[start];\n        var last = (start === end);\n\n        for (var i = 0; i < first.length; ++i) {\n            var copy = curr.slice();\n            copy.push(first[i]);\n            if (last) {\n                result.push(copy);\n            } else {\n                addTo(copy, start + 1);\n            }\n        }\n\n    };\n\n    if (args.length) {\n        addTo([], 0);\n    } else {\n        result.push([]);\n    };\n\n    return result;\n\n}\n",
            "ref": "",
            "category": ""
        },
        {
            "name": "productPoint",
            "type": "code",
            "outputType": "point",
            "parameters": [
                {
                    "name": "list1",
                    "type": "",
                    "value": 1,
                    "takesList": true
                },
                {
                    "name": "list2",
                    "type": "",
                    "value": 1,
                    "takesList": true
                }
            ],
            "source": "\n// cartesian product of two numbers returnd as a point\n\ncustomExample01.productPoint = function(list1, list2) {\n\n   var makePoint = function(a) {\n     return {x:a[0], y:a[1]};\n   };\n\n   return customExample01.product(list1, list2).map(makePoint);\n\n}",
            "ref": "",
            "category": "",
            "returnsList": true
        }
    ],
    "id": "customExample01"
}